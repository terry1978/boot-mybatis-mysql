<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.penguin.boot.mapper.UserMapper">

    <resultMap id="userResult" type="org.penguin.boot.model.User">
        <result property="id" column="id"/>
        <result property="fullName" column="full_name"/>
        <result property="userName" column="user_name"/>
        <result property="password" column="password"/>
        <result property="email" column="email"/>
        <result property="logo" column="logo" jdbcType="BLOB"/>
        <result property="comment" column="comment"/>
        <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="userOrganizationResult" extends="userResult" type="org.penguin.boot.model.User">
        <!--方式2-->
        <!--        <result property="organization.id" column="organization_id"/>-->
        <!--        <result property="organization.name" column="organization_name"/>-->
        <!--        <result property="organization.code" column="organization_code"/>-->
        <!--        <result property="organization.status" column="organization_status"/>-->
        <!--        <result property="organization.createdTime" column="organization_created_time" jdbcType="TIMESTAMP"/>-->

        <!--方式3-->
        <!--        <association property="organization" columnPrefix="organization_"-->
        <!--                     javaType="org.penguin.boot.model.Organization">-->
        <!--            <result property="id" column="id"/>-->
        <!--            <result property="name" column="name"/>-->
        <!--            <result property="code" column="code"/>-->
        <!--            <result property="status" column="status"/>-->
        <!--            <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/>-->
        <!--        </association>-->

        <!--方式4-->
        <!--        <association property="organization" columnPrefix="organization_" resultMap="organizationResult"/>-->

        <!--方式5-->
        <association property="organization" columnPrefix="organization_"
                     resultMap="org.penguin.boot.mapper.OrganizationMapper.OrganizationResult"/>
    </resultMap>

    <resultMap id="organizationResult" type="org.penguin.boot.model.Organization">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="code" column="code"/>
        <result property="status" column="status"/>
        <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="userAndLazyOrganizationAssociationResult" extends="userResult" type="org.penguin.boot.model.User">
        <association property="organization" column="{id=organization_id}"
                     select="org.penguin.boot.mapper.OrganizationMapper.selectOrganizationById" fetchType="lazy"/>
    </resultMap>


    <!--方式1: 关联的嵌套结果映射: 一次查询将结果映射到不同对象。-->
    <select id="selectUserAndOrganizationUsingResultTypeByUserId" resultType="org.penguin.boot.model.User">
        SELECT u.id,
               u.full_name as fullName,
               u.user_name as userName,
               u.password,
               u.email,
               u.created_time createdTime,
               c.id as 'organization.id',
               c.name as 'organization.name',
               c.code as 'organization.code',
               c.status as 'organization.status',
               c.created_time as 'organization.createdTime'
        FROM tbl_users u
                 inner join tbl_organizations c on u.organization_id = c.id
        where u.id = #{userId}</select>

    <!--方式2：使用ResultMap配置一对一映射，可以利用ResultMap的继承，简化并优化ResultMap ok-->
    <select id="selectUserAndRoleUsingResultMapByUserId" resultMap="userOrganizationResult">
        SELECT u.id,
               u.full_name,
               u.user_name,
               u.password,
               u.email,
               u.created_time,
               c.id           "organization_id",
               c.name         "organization_name",
               c.code         "organization_code",
               c.status       "organization_status",
               c.created_time "organization_created_time"
        FROM tbl_users u
                 inner join tbl_organizations c on u.organization_id = c.id
        where u.id = #{userId}</select>

    <!--前面的5种方式都是一次性查询，下面开始使用嵌套查询()-->
    <select id="selectUserAndLazyOrganizationByUserId" resultMap="userAndLazyOrganizationAssociationResult">
        SELECT u.id,
               u.full_name,
               u.user_name,
               u.password,
               u.email,
               u.created_time,
               u.organization_id
        FROM tbl_users u
        where u.id = #{userId}</select>

    <insert id="createUser" useGeneratedKeys="true" keyProperty="id">
        insert into tbl_users
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="fullName != null and fullName != ''">full_name,</if>
            <if test="userName != null and userName != ''">user_name,</if>
            <if test="password != null and password != ''">password,</if>
            <if test="email != null and email != ''">email,</if>
            <if test="logo != null">logo,</if>
            <if test="comment != null and comment != ''">comment,</if>
            <if test="organization != null and organization.id != null">organization_id,</if>
            updated_time
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="fullName != null and fullName != ''">#{fullName},</if>
            <if test="userName != null and userName != ''">#{userName},</if>
            <if test="password != null and password != ''">#{password},</if>
            <if test="email != null and email != ''">#{email},</if>
            <if test="logo != null">#{logo},</if>
            <if test="comment != null and comment != ''">#{comment},</if>
            <if test="organization != null and organization.id != null">#{organization.id},</if>
            sysdate()
        </trim>
    </insert>

    <update id="updateUser">
        update tbl_users
        <set>
            <if test="fullName != null and fullName != ''">full_name=#{fullName},</if>
            <if test="userName != null and userName != ''">user_name=#{userName},</if>
            <if test="email != null and email != ''">email=#{email},</if>
            <if test="logo != null">logo=#{logo},</if>
            <if test="comment != null and comment != ''">comment=#{comment},</if>
            <if test="organization != null and organization.id != null">organization_id=#{organization.id},</if>
            updated_time = sysdate()
        </set>
        where id=#{id}
    </update>

    <select id="selectUsersByRoleId" resultMap="userResult">
        SELECT u.id,
               u.full_name,
               u.user_name,
               u.password,
               u.email,
               u.created_time
        FROM tbl_users u
        where u.role_id = #{roleId}</select>
</mapper>