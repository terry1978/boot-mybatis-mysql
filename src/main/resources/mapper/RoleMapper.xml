<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.penguin.boot.mapper.RoleMapper">

    <resultMap type="org.penguin.boot.model.Role" id="RoleResult">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="comment" column="comment"/>
        <result property="enabled" column="enabled"/>
        <result property="createdTime" column="created_time"/>
    </resultMap>

    <resultMap type="org.penguin.boot.model.Role" extends="RoleResult" id="RoleContainUsersResult">
        <!--        <collection property="users" columnPrefix="user_" ofType="org.penguin.boot.model.User">-->
        <!--            <id property="id" column="id"/>-->
        <!--            <result property="fullName" column="full_name"/>-->
        <!--            <result property="userName" column="user_name"/>-->
        <!--            <result property="password" column="password"/>-->
        <!--            <result property="email" column="email"/>-->
        <!--            <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/>-->
        <!--        </collection>-->

        <collection property="users" columnPrefix="user_" resultMap="org.penguin.boot.mapper.UserMapper.userResult"/>
    </resultMap>

    <select id="selectRoleAndUsersById" resultMap="RoleContainUsersResult">
        SELECT r.id,
               r.name,
               r.comment,
               r.enabled,
               r.created_time,
               u.id           "user_id",
               u.full_name    "user_full_name",
               u.user_name    "user_user_name",
               u.password     "user_password",
               u.email        "user_email",
               u.created_time "user_created_time"
        FROM tbl_roles r
                 left join tbl_users u on r.id = u.role_id
        where r.id = #{id}</select>

    <resultMap type="org.penguin.boot.model.Role" extends="RoleResult" id="RoleContainLazyUsersResult">
        <collection property="users" fetchType="lazy" column="{roleId=id}"
                    select="org.penguin.boot.mapper.UserMapper.selectUsersByRoleId"/>
    </resultMap>

    <select id="selectRoleAndLazyUsersById" resultMap="RoleContainLazyUsersResult">
        SELECT r.id,
               r.name,
               r.comment,
               r.enabled,
               r.created_time
        FROM tbl_roles r
        where r.id = #{id}</select>

    <resultMap type="org.penguin.boot.model.Role" extends="RoleResult" id="RoleChooseContainLazyUsersResult">
        <!--鉴别器映射(选择器): resultMap的优先级高于resultType-->
        <discriminator javaType="BOOLEAN" column="enabled">
            <case value="true" resultMap="RoleContainLazyUsersResult"></case>
            <case value="false" resultMap="RoleResult"></case>

        </discriminator>
    </resultMap>

    <select id="selectRoleAndLazyUsersChooseRoleEnabledById" resultMap="RoleChooseContainLazyUsersResult">
        SELECT r.id,
               r.name,
               r.comment,
               r.enabled,
               r.created_time
        FROM tbl_roles r
        where r.id = #{id}</select>
</mapper>